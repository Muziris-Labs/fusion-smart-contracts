{"metadata":"{\"defaultCompiler\":{\"version\":\"0.8.24\"},\"sources\":{\"contracts/external/OpenBatchExecutor.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/**\\n * @title OpenBatchExecutor - Allows to execute a batch of transactions in a single transaction.\\n * @author Anoy Roy Chowdhury - <anoy@valerium.id>\\n */\\n\\ncontract OpenBatchExecutor {\\n    struct Transaction {\\n        address to;\\n        uint256 value;\\n        bytes data;\\n    }\\n\\n    /**\\n     * @notice Executes a batch of transactions in a single transaction.\\n     * @param transactions The transactions to execute. The array must not be empty.\\n     */\\n    function executeBatch(Transaction[] memory transactions) public payable {\\n        uint256 totalValue = 0;\\n\\n        for (uint i = 0; i < transactions.length; i++) {\\n            Transaction memory txn = transactions[i];\\n            totalValue += txn.value;\\n\\n            require(\\n                address(this).balance >= txn.value,\\n                \\\"Insufficient balance for transaction\\\"\\n            );\\n\\n            (bool success, ) = txn.to.call{value: txn.value}(txn.data);\\n            require(success, \\\"Transaction failed\\\");\\n        }\\n\\n        require(\\n            msg.value >= totalValue,\\n            \\\"Insufficient ETH sent for all transactions\\\"\\n        );\\n\\n        // Return any excess ETH\\n        uint256 remainingBalance = address(this).balance;\\n        if (remainingBalance > 0) {\\n            payable(msg.sender).transfer(remainingBalance);\\n        }\\n    }\\n\\n    // Allow the contract to receive ETH\\n    receive() external payable {}\\n}\\n\",\"versionPragma\":\">=0.7.0 <0.9.0\"}}}","address":"0x57405442b6B6837FBD4B462E2B7c60D61AB43da7","bytecode":"0x60806040523461001a5760405161059d610020823961059d90f35b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c6334fcd5be0361000e57610251565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761006857604052565b610030565b9061008161007a60405190565b9283610046565b565b67ffffffffffffffff81116100685760208091020190565b6001600160a01b031690565b90565b6001600160a01b0381165b036100bc57565b600080fd5b90503590610081826100aa565b806100b5565b90503590610081826100ce565b67ffffffffffffffff811161006857602090601f01601f19160190565b90826000939282370152565b9092919261011f61011a826100e1565b61006d565b93818552818301116100bc576100819160208501906100fe565b9080601f830112156100bc578160206100a79335910161010a565b9190916060818403126100bc5761016b606061006d565b9261017681836100c1565b845261018581602084016100d4565b6020850152604082013567ffffffffffffffff81116100bc576101a89201610139565b6040830152565b9291906101be61011a82610083565b93818552602080860192028101918383116100bc5781905b8382106101e4575050505050565b813567ffffffffffffffff81116100bc576020916102058784938701610154565b8152019101906101d6565b9080601f830112156100bc578160206100a7933591016101af565b906020828203126100bc57813567ffffffffffffffff81116100bc576100a79201610210565b61026461025f36600461022b565b61044e565b604051005b6100a76100a76100a79290565b634e487b7160e01b600052603260045260246000fd5b90610295825190565b8110156102a6576020809102010190565b610276565b634e487b7160e01b600052601160045260246000fd5b919082018092116102ce57565b6102ab565b61009b6100a76100a7926001600160a01b031690565b6100a7906102d3565b6100a7906102e9565b1561030257565b60405162461bcd60e51b8152602060048201526024808201527f496e73756666696369656e742062616c616e636520666f72207472616e7361636044820152633a34b7b760e11b6064820152608490fd5b9061036061011a836100e1565b918252565b3d1561037f576103743d610353565b903d6000602084013e565b606090565b1561038b57565b60405162461bcd60e51b815260206004820152601260248201527f5472616e73616374696f6e206661696c656400000000000000000000000000006044820152606490fd5b156103d757565b60405162461bcd60e51b815260206004820152602a60248201527f496e73756666696369656e74204554482073656e7420666f7220616c6c20747260448201527f616e73616374696f6e73000000000000000000000000000000000000000000006064820152608490fd5b6040513d6000823e3d90fd5b60009061045a82610269565b90815b6104686100a7835190565b81101561050357806104f885806104826104fe958761028c565b5161049960208201986104938a5190565b906102c1565b976104c06104a6306102f2565b316104b96104b56100a7855190565b9190565b10156102fb565b60406104dd6104d8858501516001600160a01b031690565b925190565b92015191602083519301915af16104f2610365565b50610384565b60010190565b61045d565b505061050f6105179190565b3410156103d0565b610520306102f2565b3161052a82610269565b8111610534575050565b81808092610549610544336102f2565b6102f2565b82821561055e575bf11561055957565b610442565b506108fc61055156fea2646970667358221220fe0f4b22bb8cd9b450efd4f6357f5ed5608ee5da61b84383ab58c9175847c44e64736f6c63430008180033","deployedBytecode":"0x6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c6334fcd5be0361000e57610251565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761006857604052565b610030565b9061008161007a60405190565b9283610046565b565b67ffffffffffffffff81116100685760208091020190565b6001600160a01b031690565b90565b6001600160a01b0381165b036100bc57565b600080fd5b90503590610081826100aa565b806100b5565b90503590610081826100ce565b67ffffffffffffffff811161006857602090601f01601f19160190565b90826000939282370152565b9092919261011f61011a826100e1565b61006d565b93818552818301116100bc576100819160208501906100fe565b9080601f830112156100bc578160206100a79335910161010a565b9190916060818403126100bc5761016b606061006d565b9261017681836100c1565b845261018581602084016100d4565b6020850152604082013567ffffffffffffffff81116100bc576101a89201610139565b6040830152565b9291906101be61011a82610083565b93818552602080860192028101918383116100bc5781905b8382106101e4575050505050565b813567ffffffffffffffff81116100bc576020916102058784938701610154565b8152019101906101d6565b9080601f830112156100bc578160206100a7933591016101af565b906020828203126100bc57813567ffffffffffffffff81116100bc576100a79201610210565b61026461025f36600461022b565b61044e565b604051005b6100a76100a76100a79290565b634e487b7160e01b600052603260045260246000fd5b90610295825190565b8110156102a6576020809102010190565b610276565b634e487b7160e01b600052601160045260246000fd5b919082018092116102ce57565b6102ab565b61009b6100a76100a7926001600160a01b031690565b6100a7906102d3565b6100a7906102e9565b1561030257565b60405162461bcd60e51b8152602060048201526024808201527f496e73756666696369656e742062616c616e636520666f72207472616e7361636044820152633a34b7b760e11b6064820152608490fd5b9061036061011a836100e1565b918252565b3d1561037f576103743d610353565b903d6000602084013e565b606090565b1561038b57565b60405162461bcd60e51b815260206004820152601260248201527f5472616e73616374696f6e206661696c656400000000000000000000000000006044820152606490fd5b156103d757565b60405162461bcd60e51b815260206004820152602a60248201527f496e73756666696369656e74204554482073656e7420666f7220616c6c20747260448201527f616e73616374696f6e73000000000000000000000000000000000000000000006064820152608490fd5b6040513d6000823e3d90fd5b60009061045a82610269565b90815b6104686100a7835190565b81101561050357806104f885806104826104fe958761028c565b5161049960208201986104938a5190565b906102c1565b976104c06104a6306102f2565b316104b96104b56100a7855190565b9190565b10156102fb565b60406104dd6104d8858501516001600160a01b031690565b925190565b92015191602083519301915af16104f2610365565b50610384565b60010190565b61045d565b505061050f6105179190565b3410156103d0565b610520306102f2565b3161052a82610269565b8111610534575050565b81808092610549610544336102f2565b6102f2565b82821561055e575bf11561055957565b610442565b506108fc61055156fea2646970667358221220fe0f4b22bb8cd9b450efd4f6357f5ed5608ee5da61b84383ab58c9175847c44e64736f6c63430008180033","abi":[{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct OpenBatchExecutor.Transaction[]","name":"transactions","type":"tuple[]"}],"name":"executeBatch","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}]}